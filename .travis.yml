language: node_js

node_js:
    - "node"
    - "10"
    - "8"
    - "6"

env:
  global:
    CC_TEST_REPORTER_ID=028038c9085bc637b8ae4631096d8abea34256d88cae504cf615b447cfa50728

sudo: false

before_install:
  # - nvm install                         # Install node version from .nvmrc
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)

install:
  # - bundle install --without production --path=${BUNDLE_PATH:-vendor/bundle}  # Install ruby gems, excluding production only gems such as unicorn (already present by default in Travis)
  # - npm install                         # Install npm dependencies
  - npm install codeclimate-test-reporter

# Setup the database

git:
    submodules: false

before_script:
    # - bundle exec rake db:create db:migrate
    - npm install

script:
    - npm test

after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json


after_success:
    - npm run report-coveralls
    - npm run report-codecov
